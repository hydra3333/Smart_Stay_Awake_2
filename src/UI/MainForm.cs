using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Stay_Awake_2.UI
{
    public partial class MainForm : Form
    {
        private readonly AppState _state;
        public MainForm(AppState state)
        {
            Trace.WriteLine("Stay_Awake_2: UI.MainForm: Entered MainForm ctor ...");
            _state = state ?? throw new ArgumentNullException(nameof(state));

            InitializeComponent();

            // DPI is already set by the Designer; rest of our window policy:
            this.AutoScaleMode = AutoScaleMode.Dpi;
            this.FormBorderStyle = FormBorderStyle.FixedSingle;
            this.MaximizeBox = false;
            this.MinimizeBox = true;
            // Optional niceties:
            this.StartPosition = FormStartPosition.CenterScreen;
            // this.KeyPreview = true; // if you’ll handle ESC / shortcuts globally

            // Example: use state to set title / initial labels
            this.Text = $"{_state.AppDisplayName} — v{_state.AppVersion}";
            Trace.WriteLine($"UI.MainForm: Using Mode={_state.Mode}, TraceEnabled={_state.TraceEnabled}");
            Trace.WriteLine("UI.MainForm: Exiting ctor (success).");

            // If you still have a parameterless ctor generated by designer, you can keep it private
            // to avoid accidental use; but best is to remove it and recompile the designer if needed.
            // private MainForm() { InitializeComponent(); }

            Trace.WriteLine("Stay_Awake_2: UI.MainForm: Exiting MainForm ctor ...");

        }

        private void MainForm_Load(object sender, EventArgs e)
        {
            Trace.WriteLine("Stay_Awake_2: UI.MainForm_Load: Entered MainForm_Load ...");
            Trace.WriteLine("Stay_Awake_2: UI.MainForm_Load: Exiting MainForm_Load ...");
        }
    }
}
